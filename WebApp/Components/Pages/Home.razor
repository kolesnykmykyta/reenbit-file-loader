@page "/"
@rendermode InteractiveServer
@inject IBlobStorageService blobStorageService

<PageTitle>File Upload</PageTitle>

<div>
    <EditForm Model="@unit" OnSubmit="SubmitFormAsync" FormName="file-upload">
        <div class="mt-2">
            <label for="email">Email</label>
            <InputText id="email" type="email" @bind-Value="@unit.Email" required></InputText>
        </div>
        <div class="mt-2">
            <label for="file">File (.docx only)</label>
            <InputFile id="file" class="form-control" OnChange="LoadFile" required></InputFile>
        </div>
        <div class="d-flex flex-row-reverse">
            <button type="submit">Submit</button>
        </div>
    </EditForm>
</div>
<p>@Message</p>


@code {
    private string? Message { get; set; }
    private BlobFileUnit unit = new();

    private void LoadFile(InputFileChangeEventArgs e)
    {
        unit.File = e.GetMultipleFiles()[0];
    }

    private async Task SubmitFormAsync(EditContext context)
    {
        BlobFileUnit contextUnit = (BlobFileUnit)context.Model;
        try{
            await blobStorageService.UploadFileToStorageAsync(contextUnit.File?.OpenReadStream(), contextUnit.File?.Name, contextUnit.Email);
            Message = "Successfully submitted the file!";
        }
        catch (Exception ex)
        {
            Message = $"Error occured while uploading the file: {ex.Message}";
        }
    }
}
